name: Auto Release and Publish

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'tests/**'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  auto-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check current version
      id: current_version
      run: |
        CURRENT_VERSION=$(grep "^version" Cargo.toml | sed 's/version = "\(.*\)"/\1/')
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
    
    - name: Bump version
      id: bump_version
      run: |
        CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"
        
        # Update Cargo.toml
        sed -i "s/version = \"$CURRENT_VERSION\"/version = \"$NEW_VERSION\"/" Cargo.toml
        
        # Update Cargo.lock
        cargo update -p noob-commit
    
    - name: Run tests
      run: cargo test --lib
    
    - name: Build release
      run: cargo build --release --verbose
    
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Cargo.toml Cargo.lock
        git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }} ðŸ¤–" || exit 0
        git push
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.new_version }}
        name: Release v${{ steps.bump_version.outputs.new_version }}
        body: |
          ðŸ¤¡ New noob-commit release!
          
          ## Changes
          - Automatic release v${{ steps.bump_version.outputs.new_version }}
          - Latest improvements and bug fixes
          
          ## Installation
          ```bash
          cargo install noob-commit
          ```
          
          ## Usage
          ```bash
          noob-commit
          # or setup alias first:
          noob-commit --setup-alias
          nc
          ```
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: |
        cargo publish --token $CARGO_REGISTRY_TOKEN